@using ROMProjetos.Models
@using ROMProjetos.Helpers;
@model ROMProjetos.Models.Tarefa

@{
    ViewBag.Title = "Detalhes";
    var projeto = ViewBag.projeto as Projeto;
}

@section titulo{
    <!-- Page heading -->
    <div class="page-head">
        <!-- Page heading -->
        <h2 class="pull-left">@projeto.Nome
            <!-- page meta -->
            <span class="page-meta">@projeto.Interessado</span>
        </h2>


        <!-- Breadcrumb -->
        <div class="bread-crumb pull-right">
            <a href="~/"><i class="icon-home"></i>Dashboard</a>
            <span class="divider">/</span>
            <a href="@Url.Action("Detalhes", "Projeto", new { id = projeto.Id })"><i class="icon-file-alt"></i>@projeto.Nome</a>
            <span class="divider">/</span>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id })" class="bread-current">Tarefas</a>


        </div>

        <div class="clearfix"></div>

    </div>
    <!-- Page heading ends -->
}



<div class="row-fluid">

    <div class="span8">

        <div class="widget wviolet">
            <div class="widget-head">
                <div class="pull-left">Dados da Tarefa</div>
                <div class="widget-icons pull-right">
                    <a href="#" class="wminimize"><i class="icon-chevron-up"></i></a>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="widget-content">
                <div class="padd">
                    <!-- dados da tarefa -->
                    <h6>@Html.DisplayFor(model => model.Titulo)</h6>
                    <hr />
                    <p style="white-space: pre-line">@Html.DisplayFor(model => model.Descricao)</p>
                </div>
            </div>
            <div class="widget-foot">
                Dias restantes : 205
            </div>
        </div>

        <div class="widget wblue">
            <div class="widget-head">
                <div class="pull-left">Comentários</div>
                <div class="widget-icons pull-right">
                    <a href="#" class="wminimize"><i class="icon-chevron-up"></i></a>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="widget-content">
                <div class="padd">
                    <ul class="chats">
                        @foreach (var thread in Model.Thread)
                        {
                            <li class="by-me">
                                <div class="avatar pull-left">
                                    <img src="img/user.jpg" alt="">
                                </div>

                                <div class="chat-content">
                                    <div class="chat-meta">Cleyton Ferrari <span class="pull-right">@thread.Data.ToLongDateString() as @thread.Data.ToShortTimeString()</span></div>
                                    @{
                            var texto = "";
                            if (thread.GetType() == typeof(LogTarefa))
                            {
                                texto = String.Format("Alterado o status para <strong>{0}</strong>", ((LogTarefa)thread).Status.Nome);
                            }
                            else if (thread.GetType() == typeof(Comentario))
                            {
                                texto = ((Comentario)thread).Mensagem;
                            }
                                    }

                                    @Html.Raw(texto)
                                    <div class="clearfix">
                                    </div>
                                </div>
                            </li>
                        }

                    </ul>
                </div>
            </div>
            <div class="widget-foot">

                <!-- Chat input box -->
                @using (Html.BeginForm("PostarMensagem", "Tarefa", FormMethod.Post, new { @class = "form-inline" }))
                {
                    <div class="input-append row-fluid">
                        @Html.Hidden("id", Model.Id)
                        <input type="text" id="mensagem" name="mensagem" class="span10" placeholder="Digite sua mensagem">
                        <button type="submit" class="btn btn-info">Enviar</button>
                    </div>
                 
                }
            </div>
        </div>

    </div>

    <!-- tarefa sidebar -->

    <div class="span4">

        <div class="widget wgreen">
            <div class="widget-head">
                <div class="pull-left">Detalhes</div>
                <div class="widget-icons pull-right">
                    <a href="#" class="wminimize"><i class="icon-chevron-up"></i></a>
                </div>
                <div class="clearfix"></div>
            </div>

            <div class="widget-content">
                <div class="padd">

                    @Html.DisplayNameFor(model => model.Status): <strong id="status">@Html.DisplayFor(model => model.Status.Nome)</strong>
                    <hr />
                    @Html.DisplayNameFor(model => model.Peso): <strong>@Html.DisplayFor(model => model.Peso)</strong>
                    <hr />
                    @Html.DisplayNameFor(model => model.CriadaEm): <strong>@Html.DisplayFor(model => model.CriadaEm)</strong>
                    <hr />
                    @Html.DisplayNameFor(model => model.EntregarAte): <strong>@Html.DisplayFor(model => model.EntregarAte)</strong>
                    <hr />
                    @Html.DisplayNameFor(model => model.Prioridade): @Html.PrioridadeDaTarefa(Model.Prioridade.Nome) <strong>@Html.DisplayFor(model => model.Prioridade.Nome)</strong>
                    <hr />
                    @Html.DisplayNameFor(model => model.TipoTarefa): <strong>@Html.DisplayFor(model => model.TipoTarefa.Nome)</strong>

                </div>
            </div>
            <div class="widget-foot">

                @if (Model.Status.Chave == "concluida" || Model.Status.Chave == "cancelada")
                {
                    @Ajax.ActionLink("Reabrir", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "aberta" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" }, new { @class = "btn" })
                }
                else
                {
                    @Ajax.ActionLink("Concluir", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "concluida" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" }, new { @class = "btn " })
                    @: 
                    @Ajax.ActionLink("Cancelar", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "cancelada" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" }, new { @class = "btn btn-danger" })
                }

                <div class="btn-group">
                    <a class="btn btn-info dropdown-toggle" data-toggle="dropdown" href="#">Workflow<span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li>
                            @Ajax.ActionLink("Aberta", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "aberta" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" })
                        </li>
                        <li>
                            @Ajax.ActionLink("Sendo Feita", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "sendofeita" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" })
                        </li>
                        <li>
                            @Ajax.ActionLink("Concluída", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "concluida" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" })
                        </li>
                        <li>
                            @Ajax.ActionLink("Cancelar", "AlterarStatus", "Tarefa", new { Id = Model.Id, Status = "cancelada" }, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "sucesso", OnFailure = "erro" })
                        </li>
                    </ul>
                </div>
            </div>
        </div>

    </div>

</div>




<script type="text/javascript">

    function sucesso(tarefa) {
        console.log(tarefa);
        $('#status').text(tarefa.Status.Nome);
    }

    function erro(response) {
        console.log(response);
    }
</script>

