@using ROMProjetos.Helpers
@using ROMProjetos.Models
@model IEnumerable<ROMProjetos.Models.Tarefa>

@{
    ViewBag.Title = "Index";
    var projeto = ViewBag.projeto as Projeto;
}

<h2>@projeto.Nome <small>@projeto.Interessado</small></h2>

@Html.ActionLink("Nova Tarefa", "CriarTarefa", new { idProjeto = projeto.Id }, new { @Class = "btn btn-primary btn-small" })

@Html.Message(MessageType.Success, TempData["MensagemSucesso"])

<div class="btn-group">
    
    <a class="btn btn-primary dropdown-toggle btn-small" data-toggle="dropdown" href="#">Status<span class="caret"></span>
    </a>
    <ul class="dropdown-menu">
        <li>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = "" })" >Todas</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = "aberta" })" >Aberta</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = "sendofeita" })" >Sendo Feita</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = "concluida" })" >Concluída</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = "cancelada" })">Cancelada</a>
        </li>
    </ul>
</div>
<p></p>
<table class="table table-striped table-condensed">
    <tr>
        <th style="width: 20%">
            @Html.DisplayNameFor(model => model.Titulo)
        </th>
        <th style="width: 15%">
            @Html.DisplayNameFor(model => model.Colaborador)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Peso)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CriadaEm)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EntregarAte)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TipoTarefa)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Prioridade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Titulo, "Detalhes", new { id = item.Id })
            </td>
            <td>
                @if (item.Colaborador != null)
                {
                    <a href="@Url.Action("Detalhes", "Colaborador", new {id = item.Colaborador.Id})">@item.Colaborador.Nome</a>
                }
                else
                {
                    @:Não Atribuido
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Peso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CriadaEm)
            </td>
            <td>
                @{
        var urgente = (item.EntregarAte <= DateTime.Now) ? "label label-important" : null;
        var proximo = (DateTime.Now.AddDays(3) >= item.EntregarAte) ? "label label-warning" : null;
        var alerta = urgente ?? proximo ?? "";
                }
                <span class="@alerta">@Html.DisplayFor(modelItem => item.EntregarAte)</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoTarefa.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prioridade.Nome)
            </td>
            <td>
                <a href="@Url.Action("Index", "Tarefa", new { idProjeto = projeto.Id, status = item.Status.Chave })">@item.Status.Nome</a>
            </td>
        </tr>
    }

</table>
